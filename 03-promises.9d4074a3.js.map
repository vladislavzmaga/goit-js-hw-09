{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,SAC9BC,EAAQH,EAAKI,SAASC,MACtBC,EAAON,EAAKI,SAASG,KACrBC,EAASR,EAAKI,SAASK,OAiB7B,SAASC,EAAcC,EAAUC,GAU/B,OATgB,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,GACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEtDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GACjDA,E,IAvBPZ,EAAKqB,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAIC,iBAIJ,IAHA,IAAMC,GAAehB,EAAOiB,MACtBC,GAAapB,EAAKmB,MACpBE,GAAcxB,EAAMsB,MACfG,EAAI,EAAGA,GAAKJ,EAAaI,GAAK,EACrClB,EAAckB,EAAGD,GACdE,MAAK,SAAAC,G,OAAUC,EAAAjC,GAASkC,OAAOC,QAAQH,E,IACvCI,OAAM,SAAAC,G,OAASJ,EAAAjC,GAASkC,OAAOI,QAAQD,E,IAC1CR,GAAcD,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst form = document.querySelector('.form');\nconst delay = form.elements.delay;\nconst step = form.elements.step;\nconst amount = form.elements.amount;\n\nform.addEventListener('submit', generatedPromise);\n\nfunction generatedPromise(evt) {\n  evt.preventDefault();\n  const countAmount = +amount.value;\n  const countStep = +step.value;\n  let countDelay = +delay.value;\n  for (let i = 1; i <= countAmount; i += 1) {\n    createPromise(i, countDelay)\n      .then(result => Notiflix.Notify.success(result))\n      .catch(error => Notiflix.Notify.failure(error));\n    countDelay += countStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delay","elements","delay","$ce04d3a99e08e73b$var$step","step","$ce04d3a99e08e73b$var$amount","amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","addEventListener","evt","preventDefault","countAmount","value","countStep","countDelay","i","then","result","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.9d4074a3.js.map"}