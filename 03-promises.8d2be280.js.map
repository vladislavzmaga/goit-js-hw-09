{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAQH,EAAKI,SAASC,MACtBC,EAAON,EAAKI,SAASG,KACrBC,EAASR,EAAKI,SAASK,OAiB7B,SAASC,EAAcC,EAAUC,GAU/B,OATgB,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,GACFF,EAAQ,uBAAqBH,QAAiBC,OAE9CG,EAAK,sBAAoBJ,QAAeC,MAAU,GACnDA,EAAM,G,CAvBbZ,EAAKoB,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAIC,iBACJ,MAAMC,GAAef,EAAOgB,MACtBC,GAAanB,EAAKkB,MACxB,IAAIE,GAAcvB,EAAMqB,MACxB,IAAK,IAAIG,EAAI,EAAGA,GAAKJ,EAAaI,GAAK,EACrCjB,EAAciB,EAAGD,GACdE,MAAKC,GAAUC,EAAAhC,GAASiC,OAAOC,QAAQH,KACvCI,OAAMC,GAASJ,EAAAhC,GAASiC,OAAOI,QAAQD,KAC1CR,GAAcD,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst form = document.querySelector('.form');\nconst delay = form.elements.delay;\nconst step = form.elements.step;\nconst amount = form.elements.amount;\n\nform.addEventListener('submit', generatedPromise);\n\nfunction generatedPromise(evt) {\n  evt.preventDefault();\n  const countAmount = +amount.value;\n  const countStep = +step.value;\n  let countDelay = +delay.value;\n  for (let i = 1; i <= countAmount; i += 1) {\n    createPromise(i, countDelay)\n      .then(result => Notiflix.Notify.success(result))\n      .catch(error => Notiflix.Notify.failure(error));\n    countDelay += countStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delay","elements","delay","$47d4ff9957288465$var$step","step","$47d4ff9957288465$var$amount","amount","$47d4ff9957288465$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","countAmount","value","countStep","countDelay","i","then","result","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.8d2be280.js.map"}